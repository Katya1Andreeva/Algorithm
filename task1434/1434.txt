Данную задачу можно решить  с помощью поиска в ширину (BFS),
 чтобы найти кратчайший путь между двумя узлами в графе.
 В начале определяется класс Node, который представляет узел в графе.
 Узлы и их связи представлены с помощью списков S и nodes.
 Затем считывается количество узлов N,
 количество связей M и информация о связях между узлами.

Далее создается очередь Q с использованием deque из модуля collections.
Начальный узел a помечается как посещенный (nodes[a].v = True) и добавляется в очередь Q.
Затем начинается цикл, в котором извлекается узел из очереди, и для каждого смежного узла проверяется,
был ли он уже посещен. Если нет, то он добавляется в очередь,
 помечается как посещенный и сохраняется его предок (nodes[x].p = j).
  Это продолжается до тех пор, пока очередь не опустеет.

После завершения поиска проверяется, был ли найден путь до узла b.
Если нет, то выводится -1. В противном случае строится путь от узла b до начального узла a,
 сохраняя каждый узел в списке out. Затем выводится длина пути и последовательность узлов,
 составляющих этот путь.
